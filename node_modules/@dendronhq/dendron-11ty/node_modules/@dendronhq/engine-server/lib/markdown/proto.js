"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const rehype_stringify_1 = __importDefault(require("rehype-stringify"));
const remark_rehype_1 = __importDefault(require("remark-rehype"));
const rehype_raw_1 = __importDefault(require("rehype-raw"));
const types_1 = require("./types");
const utils_1 = require("./utils");
const txt = `# Header1

Some content

<div class="portal-container">
<div class="portal-head">
<div class="portal-backlink" >
<div class="portal-title">From <span class="portal-text-title">foo.two</span></div>
<a href="foo.two.html" class="portal-arrow">Go to text <span class="right-arrow">â†’</span></a>
</div>
</div>
<div id="portal-parent-anchor" class="portal-parent" markdown="1">
<div class="portal-parent-fader-top"></div>
<div class="portal-parent-fader-bottom"></div>        

# Foo.Two
Hello World. Really, is this all I have to do? Make this work?

</div>    
</div>
</div>    
</div>
</div>    
</div>

# More Markdown
`;
// @ts-ignore
let proc = utils_1.MDUtilsV4.procFull({ dest: types_1.DendronASTDest.HTML, engine: null });
proc = proc
    .use(remark_rehype_1.default, { allowDangerousHtml: true })
    .use(rehype_raw_1.default)
    .use(rehype_stringify_1.default);
const out = proc.process(txt);
console.log(out);
//# sourceMappingURL=proto.js.map