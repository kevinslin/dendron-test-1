"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const common_test_utils_1 = require("@dendronhq/common-test-utils");
const lodash_1 = __importDefault(require("lodash"));
const types_1 = require("../../types");
const utils_1 = require("../../utils");
const utils_2 = require("../utils");
const utils_3 = require("./utils");
describe("h1ToTitle", () => {
    test("basic", async () => {
        await common_test_utils_1.runEngineTestV4(async ({ engine }) => {
            const proc = utils_1.MDUtilsV4.procFull({
                dest: types_1.DendronASTDest.MD_REGULAR,
                engine,
            });
            // @ts-ignore
            const notes = await Promise.all(lodash_1.default.values(engine.notes).map(async (note) => {
                const newBody = await proc()
                    .use(utils_2.RemarkUtils.h1ToTitle(note, []))
                    .process(note.body);
                note.body = newBody.toString();
                return note;
            }));
            // TODO
            // expect(notes).toMatchSnapshot();
        }, {
            createEngine: utils_3.createEngine,
            expect,
            preSetupHook: async ({ wsRoot, vaults }) => {
                //const txt = `# Hello Heading\nHello Content`;
                await common_test_utils_1.NoteTestUtilsV4.createNote({
                    wsRoot,
                    vault: vaults[0],
                    fname: "foo",
                    body: [`# Foo Header`, `## Foo Content`].join("\n"),
                });
                await common_test_utils_1.NoteTestUtilsV4.createNote({
                    wsRoot,
                    vault: vaults[0],
                    fname: "bar",
                    body: [`# Bar Header`, `## Bar Content`].join("\n"),
                });
            },
        });
    });
});
//# sourceMappingURL=remarkUtils.spec.js.map