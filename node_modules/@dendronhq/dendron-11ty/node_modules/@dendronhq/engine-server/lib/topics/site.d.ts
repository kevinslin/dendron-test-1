import { DendronConfig, DendronSiteConfig, DVault, HierarchyConfig, NotePropsDictV2, NotePropsV2 } from "@dendronhq/common-all";
import { DEngineClientV2 } from "../types";
export declare class SiteUtils {
    static canPublish(opts: {
        note: NotePropsV2;
        config: DendronSiteConfig;
        vaults: DVault[];
        wsRoot: string;
    }): boolean;
    static canPublishFiltered(opts: {
        note: NotePropsV2;
        hconfig: HierarchyConfig;
        vaults: DVault[];
        wsRoot: string;
    }): boolean;
    static copyAssets(opts: {
        wsRoot: string;
        vault: DVault;
        siteAssetsDir: string;
    }): Promise<void>;
    static addSiteOnlyNotes(opts: {
        engine: DEngineClientV2;
    }): import("@dendronhq/common-all").DNodePropsV2<any, any>[];
    static filterByConfig(opts: {
        engine: DEngineClientV2;
        config: DendronConfig;
    }): Promise<{
        notes: NotePropsDictV2;
        domains: NotePropsV2[];
    }>;
    static filterByHiearchy(opts: {
        domain: string;
        config: DendronConfig;
        engine: DEngineClientV2;
        navOrder: number;
    }): Promise<{
        notes: NotePropsDictV2;
        domain: NotePropsV2;
    } | undefined>;
    static filterByNote(opts: {
        note: NotePropsV2;
        hConfig: HierarchyConfig;
    }): NotePropsV2 | undefined;
    static getConfigForHierarchy(opts: {
        config: DendronSiteConfig;
        noteOrName: NotePropsV2 | string;
    }): HierarchyConfig;
    static getDomains(opts: {
        notes: NotePropsDictV2;
        config: DendronSiteConfig;
    }): NotePropsV2[];
}
