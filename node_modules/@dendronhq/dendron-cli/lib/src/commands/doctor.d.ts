import yargs from "yargs";
import { CLICommand } from "./base";
import { CommandOptsV3 } from "./soil";
declare type CommandCLIOpts = {
    wsRoot: string;
    action: DoctorActions;
    enginePort?: number;
    query?: string;
    limit?: number;
    dryRun?: boolean;
    exit?: boolean;
};
declare type CommandOpts = CommandOptsV3 & CommandCLIOpts;
declare type CommandOutput = void;
export declare enum DoctorActions {
    H1_TO_TITLE = "h1ToTitle",
    HI_TO_H2 = "h1ToH2",
    REMOVE_STUBS = "removeStubs"
}
export { CommandOpts as DoctorCLICommandOpts };
export declare class DoctorCLICommand extends CLICommand<CommandOpts, CommandOutput> {
    constructor();
    buildArgs(args: yargs.Argv): void;
    enrichArgs(args: CommandCLIOpts): Promise<CommandOpts>;
    execute(opts: CommandOpts): Promise<void>;
}
