import { DEngineClientV2 } from "@dendronhq/common-all";
import yargs from "yargs";
import { CLICommand } from "./base";
declare type FilterRule = {
    key: string;
    value: string;
    operator: "in";
};
declare type CommandCLIOpts = {
    wsRoot: string;
    enginePort?: number;
    action: NoteActions;
    query?: string;
    limit?: number;
    dryRun?: boolean;
    filter?: string[];
};
declare type CommandOpts = CommandCLIOpts & {
    engine: DEngineClientV2;
    filters: FilterRule[];
};
declare type CommandOutput = void;
export declare enum NoteActions {
    QUERY = "query"
}
export declare class NoteCLICommand extends CLICommand<CommandOpts, CommandOutput> {
    constructor();
    buildArgs(args: yargs.Argv): void;
    enrichArgs(args: CommandCLIOpts): Promise<CommandOpts>;
    execute(opts: CommandOpts): Promise<void>;
}
export {};
