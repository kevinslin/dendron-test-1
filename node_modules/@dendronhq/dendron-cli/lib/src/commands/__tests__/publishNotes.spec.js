"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const common_test_utils_1 = require("@dendronhq/common-test-utils");
const engine_server_1 = require("@dendronhq/engine-server");
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const publishNotes_1 = require("../publishNotes");
describe("publishNotes", async () => {
    test("publish, no push", async () => {
        await common_test_utils_1.runEngineTestV4(async ({ vaults, wsRoot }) => {
            const { buildNotesRoot } = await publishNotes_1.PublishNotesCommand.run({
                wsRoot,
                vault: vaults[0],
                noPush: true,
            });
            const notesDir = path_1.default.join(buildNotesRoot, "notes");
            expect(fs_1.default.readdirSync(notesDir).length).toEqual(4);
        }, {
            createEngine: engine_server_1.createEngine,
            expect,
            preSetupHook: async (opts) => {
                await common_test_utils_1.ENGINE_HOOKS.setupBasic(opts);
            },
            singleVault: true,
        });
    });
    test("publish but no git", async () => {
        await common_test_utils_1.runEngineTestV4(async ({ vaults, wsRoot }) => {
            try {
                await publishNotes_1.PublishNotesCommand.run({
                    wsRoot,
                    vault: vaults[0],
                });
            }
            catch (err) {
                expect(err.message).toEqual("no repo found");
            }
        }, {
            createEngine: engine_server_1.createEngine,
            expect,
            preSetupHook: async (opts) => {
                await common_test_utils_1.ENGINE_HOOKS.setupBasic(opts);
            },
            singleVault: true,
        });
    });
});
//# sourceMappingURL=publishNotes.spec.js.map